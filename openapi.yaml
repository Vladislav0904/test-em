openapi: 3.0.3
info:
  title: Subscriptions API
  version: 1.0.0
  description: REST API for managing user subscriptions and calculating costs
servers:
  - url: http://localhost:8080
paths:
  /api/subscriptions/:
    get:
      summary: List subscriptions
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
            format: uuid
        - in: query
          name: service_name
          schema:
            type: string
        - in: query
          name: page
          description: "Page number (default: 1)"
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: limit
          description: "Items per page (default: 10, max: 100)"
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
    post:
      summary: Create subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /api/subscriptions/{id}:
    get:
      summary: Get subscription by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: Not found
    put:
      summary: Update subscription by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '204':
          description: No content
    delete:
      summary: Delete subscription by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Deleted
  /api/subscriptions/sum/{userid}:
    get:
      summary: Calculate total cost for a user
      parameters:
        - in: path
          name: userid
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: start
          required: true
          description: Start month in MM-YYYY
          schema:
            type: string
            example: 01-2025
        - in: query
          name: end
          required: true
          description: End month in MM-YYYY
          schema:
            type: string
            example: 12-2025
        - in: query
          name: service_name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sum:
                    type: integer
components:
  schemas:
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        service_name:
          type: string
        price:
          type: integer
          description: Monthly price in rubles
        user_id:
          type: string
          format: uuid
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
    CreateSubscriptionRequest:
      type: object
      required: [service_name, price, user_id, start_date]
      properties:
        service_name: { type: string }
        price: { type: integer }
        user_id: { type: string, format: uuid }
        start_date: { type: string, example: 07-2025 }
        end_date: { type: string, example: 12-2025 }
    UpdateSubscriptionRequest:
      type: object
      properties:
        service_name: { type: string }
        price: { type: integer }
        user_id: { type: string, format: uuid }
        start_date: { type: string, example: 07-2025 }
        end_date: { type: string, example: 12-2025 }
    SubscriptionListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        pagination:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
            limit:
              type: integer
              description: Items per page
            total:
              type: integer
              description: Total number of items
            total_pages:
              type: integer
              description: Total number of pages
            has_next:
              type: boolean
              description: Whether there is a next page
            has_prev:
              type: boolean
              description: Whether there is a previous page